name: CI/CD

on:
  pull_request:
    paths:
      - '.github/workflows/ci-cd.yml'
      - 'CMakeLists.txt'
      - '.clang-tidy'
      - '**/*.cpp'
      - '**/*.hpp'
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  REF: ${{ github.head_ref || github.run_id }}

jobs:
  gcc:
    name: GCC on Linux (${{ matrix.build_type }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc]
        build_type: [Debug, Release]

    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up cache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.compiler }}-${{ matrix.build_type }}-${{ env.REF }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/build/${{ matrix.build_type }}/_deps
          key: deps-${{ matrix.compiler }}-${{ matrix.build_type }}-${{ env.REF }}-${{ hashFiles('CMakeLists.txt') }}
          restore-keys: deps-${{ matrix.compiler }}-${{ matrix.build_type }}-${{ env.REF }}-

      - name: Configure project
        run: >
          cmake -G Ninja -B build/${{ matrix.build_type }} -DCMAKE_COMPILE_WARNING_AS_ERROR=ON
          -DCLANG_TIDY=ON -DCMAKE_CXX_CLANG_TIDY='-warnings-as-errors=*'
          -DFREDDY_STATS=ON -DFREDDY_TEST=ON

      - name: Build binaries
        run: cmake --build build/${{ matrix.build_type }}

      - name: Run tests
        working-directory: ./build/${{ matrix.build_type }}
        run: ctest --output-on-failure -j4

      - name: Measure coverage
        working-directory: ./build/${{ matrix.build_type }}
        run: |
          cov_min=80
          cov=$(ctest -T Coverage | grep -o '[^ ]*%' | sed 's/%//' | cut -d. -f1)
          if (( cov < cov_min )); then
            echo "\e[31mTest coverage ($cov%) below $cov_min%\e[0m"
            exit 1
          fi

  clang:
    name: Clang on macOS
    runs-on: macos-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up cache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ env.REF }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/build/_deps
          key: deps-${{ github.job }}-${{ env.REF }}-${{ hashFiles('CMakeLists.txt') }}
          restore-keys: deps-${{ github.job }}-${{ env.REF }}-

      - name: Configure project
        run: cmake -G Ninja -B build -DCMAKE_COMPILE_WARNING_AS_ERROR=ON -DFREDDY_STATS=ON -DFREDDY_TEST=ON

      - name: Build binaries
        run: cmake --build build

  msvc:
    name: MSVC on Windows
    runs-on: windows-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up cache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-${{ env.REF }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/build/_deps
          key: deps-${{ github.job }}-${{ env.REF }}-${{ hashFiles('CMakeLists.txt') }}
          restore-keys: deps-${{ github.job }}-${{ env.REF }}-

      - name: Configure project
        run: cmake -B build -DCMAKE_COMPILE_WARNING_AS_ERROR=ON -DFREDDY_STATS=ON -DFREDDY_TEST=ON

      - name: Build binaries
        run: cmake --build build --config Release -j4
